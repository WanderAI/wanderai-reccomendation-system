name: "Docker push to GCR"

on:
  push:
    branches:
      - staging
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Setup Gcloud Account and Deploy the application on Google Cloud
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}
      GCR_TAG: ${{ github.run_id }}
      SERVICE_NAME: ${{ github.ref == 'refs/heads/master' && 'reccom-production' || 'reccom-staging' }}
      REGION: asia-southeast2

    steps:
      - name: Print image tag
        run: echo $GITHUB_RUN_ID

      - name: Login To GCP
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Copy model from GCS
        run: gsutil cp -r gs://wanderai/model_transfer_learning.h5/ .

      - name: Build Docker image
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            docker build . -t $IMAGE_NAME/reccom-production:$GITHUB_RUN_ID
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            docker build . -t $IMAGE_NAME/reccom-staging:$GITHUB_RUN_ID
          fi

      - name: Push Docker image
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            docker push $IMAGE_NAME/reccom-production:$GITHUB_RUN_ID
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            docker push $IMAGE_NAME/reccom-staging:$GITHUB_RUN_ID
          fi
      
      - name: Auth GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/reccom-${{ github.ref == 'refs/heads/master' && 'production' || 'staging' }}:${GCR_TAG} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --port 8000 \
            --min-instances=${{ github.ref == 'refs/heads/master' && '1' || '0' }} \
            --max-instances=${{ github.ref == 'refs/heads/master' && '5' || '1' }} \
            --memory=4Gi